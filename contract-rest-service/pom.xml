<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.examplecom.example</groupId>
  <artifactId>contract-rest-service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>contract-rest-service</name>
  <description>contract-rest-service</description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.0.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>

    <docker.image.prefix>contract-rest-service</docker.image.prefix>
    <dockerfile-maven-plugin-version>1.4.9</dockerfile-maven-plugin-version>

    <spring-cloud-version>Finchley.RELEASE</spring-cloud-version>
    <spring-cloud-contract-version>2.0.2.RELEASE</spring-cloud-contract-version>

    <postgresql-version>42.2.5</postgresql-version>

    <springfox-swagger2-version>2.9.2</springfox-swagger2-version>
    <springfox-swagger-ui-version>2.9.2</springfox-swagger-ui-version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql-version}</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${springfox-swagger2-version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${springfox-swagger-ui-version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-contract-verifier</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <!-- SPRING CLOUD CONTRACT -->
      <plugin>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-contract-maven-plugin</artifactId>
        <version>${spring-cloud-contract-version}</version>
        <extensions>true</extensions>
        <configuration>
          <!-- Base class mappings -->
          <baseClassForTests>hello.BaseClass</baseClassForTests>
          <!-- We want to pick contracts from a Git repository -->
          <contractsRepositoryUrl>git://https://github.com/VPanadiy/contracts-storage.git</contractsRepositoryUrl>
          <!-- We reuse the contract dependency section to set up the path
          to the folder that contains the contract definitions. In our case the
          path will be /groupId/artifactId/version/contracts -->
          <contractDependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.artifactId}</artifactId>
            <version>${project.version}</version>
          </contractDependency>
          <!-- The contracts mode can't be classpath -->
          <contractsMode>REMOTE</contractsMode>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <!-- By default we will not push the stubs back to SCM,
              you have to explicitly add it as a goal -->
              <!--<goal>pushStubsToScm</goal>-->
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- SPRING CLOUD CONTRACT -->

      <!-- tag::plugin[] -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>${dockerfile-maven-plugin-version}</version>
        <configuration>
          <repository>${docker.image.prefix}/${project.artifactId}</repository>
        </configuration>
      </plugin>
      <!-- end::plugin[] -->

      <!-- tag::unpack[] -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- end::unpack[] -->
    </plugins>
  </build>

</project>
